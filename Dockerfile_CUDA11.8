FROM nvidia/cuda:11.8.0-runtime-ubuntu22.04

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update
RUN apt-get install -y software-properties-common
RUN add-apt-repository -y ppa:deadsnakes/ppa
RUN apt-get update
RUN apt-get install -y python3.11
RUN apt-get install -y python3.11-venv
RUN apt-get install -y python3.11-dev
RUN apt-get install -y python3-pip
RUN apt-get install -y git
RUN apt-get install -y cuda-nvcc-11-8
RUN apt-get install -y cuda-toolkit-11-8
RUN apt-get install -y vim
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1
RUN python3.11 -m ensurepip --upgrade
RUN python3.11 -m pip install --upgrade pip setuptools wheel
RUN apt-get install -y --no-install-recommends pandoc
RUN apt-get -y clean
RUN rm -rf /var/lib/apt/lists/*

# Define volumes
VOLUME /app/model_files
VOLUME /app/vector_db_data

# Set environment variables
ENV VECTORDB_DIR=/app/vector_db_data
ENV SENTENCE_TRANSFORMERS_HOME=/app/model_files
ENV TRANSFORMERS_CACHE=/app/model_files
ENV DEBIAN_FRONTEND=dialog

# Set working directory
WORKDIR /app

# Copy requirements files
COPY reqs.txt .
COPY requirements_cuda.txt .

# Install requirements
RUN python3.11 -m pip install --no-cache-dir --no-deps -r requirements_cuda.txt
#RUN python3 -m pip install ctransformers[cuda]==0.2.27
#RUN python3 -m pip install llama-cpp-python==0.2.28 --force-reinstall --no-cache-dir
RUN CMAKE_ARGS="-DLLAMA_CUBLAS=on" python3 -m pip install llama-cpp-python --force-reinstall
RUN python3 -m pip install torch --force-reinstall --no-cache-dir

# Copy application files
COPY context_chat_backend context_chat_backend
COPY main.py .
#COPY config.yaml .
COPY config_cuda.yaml config.yaml

CMD ["python3", "main.py"]
